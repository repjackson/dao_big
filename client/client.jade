head
    title Porter Exchange System
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#000000")
    meta(name="theme-color" content="#000000")
    link(rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/npm/fomantic-ui@2.7.4/dist/semantic.min.css')
    // link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")
    link(rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")
    link(rel="manifest" href="/site.webmanifest")
    link(rel="mask-icon" href="/safari-pinned-tab.svg" color="#000000")
    // link(href="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/css/suneditor.min.css" rel="stylesheet")

    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')
    script(src='https://cdn.jsdelivr.net/npm/fomantic-ui@2.7.4/dist/semantic.min.js')
    
    // script(src="https://cdn.jsdelivr.net/npm/sweetalert2@9")
    // script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/suneditor.min.js")
    // script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/src/lang/en.js")

    //- script(async='', src='https://www.googletagmanager.com/gtag/js?id=UA-140259454-1')
    script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        
        gtag('config', 'G-GLYPPRGJFQ');

    
template(name='layout')
    // img.ui.fluid.image.checkin_banner(src="{{c.url 'frontrange' width=1000 height=1000 crop='crop'}}")
    +nav
    .global_container.scrolling
        unless currentUser
            .ui.center.aligned.basic.segment
                .ui.small.inline.header pick perspective
                +role_picker name='middle_eastern' 
                +role_picker name='mexican' 
                +role_picker name='chinese' 
                +role_picker name='italian' 
                +role_picker name='american' 
                +role_picker name='pastry' 
                +role_picker name='porters' 
                +role_picker name='roof_bar' 
                +role_picker name='bar' 
                +role_picker name='admin' 
        +yield


template(name='nav')
    #topnav.topnav.ui.attached.big.five.item.borderless.menu
        // a.item.zoomer(href='/' class="{{isActivePath '/'}}" title='food')
        //     i.dolly.icon
        //     .mobile.hidden PES
        a.item.zoomer(href='/requests' class="{{isActivePath '/requests'}}")
            i.bullhorn.large.icon
            .mobile.hidden #{requests.count} requests
        a.item.zoomer(href='/transfers' class="{{isActivePath '/transfers'}}")
            i.exchange.large.icon
            .mobile.hidden #{transfer.count} transfers
        a.item.zoomer(href='/items' class="{{isActivePath '/items'}}")
            i.food.large.icon
            .mobile.hidden #{items.count} items
        if currentUser
            a.item(href="/user/#{currentUser.username}" class=user_nav_button_class title=user_nav_button_title)
                if currentUser.image_id
                    img.ui.avatar.image(src="{{c.url currentUser.image_id width=100 height=100 gravity='face' crop='fill'}}")
                else
                    i.user.icon
                span #{currentUser.username}
            a.icon.item.logout
                i.sign.out.alternate.large.icon
                
                
                
template(name='items')
    .ui.padded.stackable.grid
        .sixteen.wide.column
            .ui.inline.header 
                |item request menu
                i.plus.circular.link.small.icon.add_item
            .ui.seven.stackable.doubled.cards
                each item_docs
                    +item_item
            div
        


template(name='item_item')
    if session_is 'editing_item' _id
        .ui.card
            +image_edit key='image_id' direct=true
            .content
                +text_edit key='title' direct=true
                i.checkmark.circular.link.green.icon.save_item            
    else
        .ui.card
            img.ui.image.request_item.pointer(src="{{c.url image_id width=500 height=500 gravity='face' crop='fill'}}")
            .content
                .ui.header #{title}
            unless is_porters
                .ui.basic.button.request_item
                    i.dolly.green.icon
                    |request
            else 
                .ui.disabled.button.request_item
                    i.dolly.icon
                    |request
                // if in_quicklist
                //     .ui.button.remove_quicklist
                // else
                //     .ui.button
                //         i.plus.icon
                //         | quicklist
            if is_admin
                i.pencil.circular.link.icon.edit_item            




template(name='role_picker')
    .ui.circular.basic.button.pick_user
        |#{name}
        
        
        
template(name='requests')
    .ui.padded.stackable.grid
        unless is currentUser.username 'porters'
            .eight.wide.column
                .ui.inline.center.aligned.header 
                    i.bullhorn.icon
                    |#{your_request_docs.count} #{currentUser.username} requests
                .ui.list.smallscroll
                    each your_request_docs
                        +request_item
        .eight.wide.column
            .ui.inline.center.aligned.header 
                i.bullhorn.icon
                |#{unprocessed_requests.count} new requests
            .ui.list.smallscroll
                each unprocessed_requests
                    +request_item
        .eight.wide.column
            .ui.inline.center.aligned.header 
                i.running.icon
                |#{processed_requests.count} in progress
            .ui.list.smallscroll
                each processed_requests
                    +request_item
        


template(name='transfers')
    .ui.padded.stackable.grid
        .twelve.wide.column
            .ui.inline.header 
                i.exchange.icon
                |#{request_docs.count} requests
            .ui.large.selection.link.animated.list
                each request_docs
                    +request_item
        .four.wide.column
            .ui.header 
                i.line.chart.icon
                |stats
            .ui.header total requests
            .ui.header average delivery time
            .ui.header most requested items
            .ui.header requests this week
            .ui.header requests last week
            
            

template(name='request_item')
    .ui.grid
        .four.wide.column
            img.ui.inline.image(src="{{c.url item_image_id width=500 height=500 gravity='face' crop='fill'}}")
        .twelve.wide.column
            .ui.inline.header
                |#{item_title} 
                i.large.chevron.right.icon
                |#{_author_username}
            | added #{when}
            .ui.big.label(class=request_class)
                |#{status}
            if is_requested
                if is_porters
                    .ui.big.yellow.button.pick_up
                        i.running.icon
                        |pick up
                if is_requester
                    .ui.basic.red.circular.icon.button.cancel_request(title='cancel')
                        i.remove.icon
                        // |cancel
            else if is_processing
                |picked up {{from_now pick_up_timestamp}}
                if is_requester
                    .ui.green.button.mark_delivered
                        |mark delivered
                // if key_value_is _author_username currentUser.username
            else if is_delivered
                | picked up {{from_now pick_up_timestamp}}
                |, delivered {{from_now delivered_timestamp}}
                |, ({{delivery_time}} mins)                