head
    title dao
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#000000")
    meta(name="theme-color" content="#000000")
    link(rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/npm/fomantic-ui@2.7.4/dist/semantic.min.css')
    // link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")
    // link(rel="preconnect" href="https://fonts.gstatic.com")
    // link(href="https://fonts.googleapis.com/css2?family=Benne&display=swap" rel="stylesheet")
    link(rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")
    link(rel="manifest" href="/site.webmanifest")
    link(rel="mask-icon" href="/safari-pinned-tab.svg" color="#000000")
    link(href="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/css/suneditor.min.css" rel="stylesheet")

    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')
    script(src='https://cdn.jsdelivr.net/npm/fomantic-ui@2.7.4/dist/semantic.min.js')
    
    script(src="https://cdn.jsdelivr.net/npm/sweetalert2@9")
    script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/suneditor.min.js")
    script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/src/lang/en.js")

    // script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.4.1/chart.js")
    //- script(async='', src='https://www.googletagmanager.com/gtag/js?id=UA-140259454-1')
    script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        
        gtag('config', 'G-GLYPPRGJFQ');

    
template(name='layout')
    // img.ui.fluid.image.checkin_banner(src="{{c.url 'frontrange' width=1000 height=1000 crop='crop'}}")
    +nav
    .ui.bottom.attached.pushable.segment.scrollin
        +topbar
        +left_sidebar
        +right_sidebar
        // +cartbar
        // +walletbar
        // +secnav
    
        if logging_in
            .ui.center.aligned.basic.segment
                i.massive.loading.yin.yang.grey.icon
        else
            .global_conainer.pusher
                +yield
                // if in_role 'admin'
                //     +admin_footer
                
                

        
template(name='transfers')
    .ui.padded.stackable.grid
        .twelve.wide.column
            .ui.inline.header 
                i.exchange.icon
                |#{request_docs.count} requests
            .ui.basic.compact.button new
            .ui.basic.compact.button in progress
            .ui.basic.compact.button delivered
            .ui.large.selection.link.animated.list.scrolling
                each request_docs
                    +request_item
        .four.wide.column
            .ui.header 
                i.line.chart.icon
                |stats
            .ui.header total requests
            .ui.header average delivery time
            .ui.header most requested items
            .ui.header requests this week
            .ui.header requests last week
            
            


template(name='flat_tag_picker')
    .ui.label #{this}

                

template(name='not_found')
    .ui.center.aligned.basic.segment
        .ui.big.header page not found
        
template(name='services')
    .ui.header management services
    with service_doc
        +direct_doc key='services'
        
        
template(name='home')
    .ui.padded.grid 
        .sixteen.wide.column
            i.refresh.icon.refresh_stats
            with stats_doc
                .ui.large.header total costs: #{total_costs} total costs
                .ui.large.header total costs: #{total_income} total income
                .ui.large.header total costs: #{net_income} net income
            // a.ui.massive.button.zoomer(href="/users")
            //     img.ui.small.inline.image(src="{{c.url current_group.image_id }}")
            //     .ui.inline.header 
            //         |#{current_group.title}
            //     if currentUser 
            //         a.fly_down(href="/group/#{currentUser.current_group_id}/edit" title='edit current group')
            //             i.large.setting.circular.link.icon
    
            a.ui.massive.button.zoomer(href="/users")
                .ui.icon.header
                    i.users.icon
                    |users
            a.ui.massive.button.zoomer(href="/posts")
                .ui.icon.header
                    i.blog.icon
                    |posts
            a.ui.massive.button.zoomer(href="/units")
                .ui.icon.header
                    i.building.icon
                    |units
            a.ui.massive.button.zoomer(href="/repairs")
                .ui.icon.header
                    i.wrench.icon
                    |repairs
            a.ui.massive.button.zoomer(href="/tasks")
                .ui.icon.header
                    i.tasks.icon
                    |tasks
            a.ui.massive.button.zoomer(href="/chat")
                .ui.header
                    +i name='chat'
                    i.chat.icon
                    |chat
            // a.ui.massive.button.zoomer(href="/work")
            //     .ui.icon.header
            //         i.wrench.icon
            //         |work
            // a.ui.massive.button.zoomer(href="/products")
            //     .ui.icon.header
            //         i.shop.icon
            //         |products
            a.ui.massive.button.zoomer(href="/costs")
                .ui.icon.header
                    i.money.icon
                    |costs
            // a.ui.massive.button.zoomer(href="/groups")
            //     .ui.icon.header
            //         i.fire.icon
            //         |groups
            +services
            
            
            
template(name='direct_doc')
    if doc 
        with doc
            |#{content}
    else 
        .ui.button.create_doc
            |create
           
           
           
           
           
template(name='chat')
    .ui.stackable.padded.grid
        .sixteen.wide.column
            .ui.inline.header 
                // i.large.fire.icon
                +i name='chat'
                |chats
            .ui.input
                input.add_chat(type='text' placeholder='add message...')
            .ui.large.list.scrolling
                each chat_docs
                    +chat_item
                 
                 

template(name='chat_item')
    .item
        .content 
            .header 
                |#{body}
            .description
                +voting_full
                .ui.label #{_author_username}
                .ui.label #{when}
                
           