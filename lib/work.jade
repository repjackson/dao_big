template(name='work')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                i.wrench.icon
                |work
            .ui.inline.header 
                i.user.friends.icon
                |staff
            each picked_author
                .ui.blue.button.unpick_author
                    |#{this}
            each author_results
                if title
                    .ui.basic.circular.small.button.pick_author
                        |#{title} #{count}
            .ui.inline.header 
                i.task.icon
                |task
            each picked_tasks
                .ui.blue.button.unpick_task
                    |#{this}
            each task_results
                if title
                    .ui.basic.circular.small.button.pick_task
                        |#{title} #{count}
            .ui.header 
                i.marker.icon
                |location
            each picked_locations
                .ui.blue.button.unpick_location
                    |#{this}
            each location_results
                if title
                    .ui.basic.circular.small.button.pick_location
                        |#{title} #{count}
        .twelve.wide.column
            // .ui.basic.button.add_work
            //     i.large.plus.icon
            //     |log work
            // .ui.basic.button.add_task
            //     i.large.plus.icon
            //     |task
            // each picked_sections
            //     button.ui.blue.compact.small.button.unpick_section(tabindex='0')
            //         //- i.remove.icon
            //         | #{this}
            // // div
            // +i name='clock' cl='ui inline mini image'
            // each sections
            //     button.ui.compact.basic.button.pick_section(tabindex="0" class=result_class title=count) #{title}
            //         //- small #{count}
            // // unless one_post
            span.sorting_row
                +session_set key='view_users' value='grid' icon='th' 
                +session_set key='view_users' value='list' icon='list'
                +session_set key='sort_users_direction' value='-1' icon='chevron down'
                +session_set key='sort_users_direction' value='1' icon='chevron up'
                +session_set key='sort_users_key' value='points' icon='coins'
                +session_set key='sort_users_key' value='created_date' icon='clock'
                +session_set key='view_limit' value=1
                +session_set key='view_limit' value=10
                +session_set key='view_limit' value=20
                +session_set key='view_limit' value=50

                
                i.large.sort.icon
                +set_product_sort_key key='price_usd' label='price' icon='money'
                +set_product_sort_key key='_timestamp' label='added' icon='clock'
                // +set_product_sort_key key='comment_count' label='comment count' icon='chat'
                // +set_product_sort_key key='views' label='views' icon='eye'
                // +set_product_sort_key key='points' label='points' icon='line chart'
                .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
                    if sorting_up
                        i.sort.amount.down.icon
                    else
                        i.sort.amount.up.icon
                |&nbsp;
                |&nbsp;
                // .ui.compact.menu
                //     .ui.simple.dropdown.item
                //         strong #{product_limit}
                //         i.dropdown.icon
                //         .menu
                        //   +set_product_limit amount=1
                           +set_product_limit amount=5
                           +set_product_limit amount=10
                            +set_product_limit amount=20
                // .ui.inline.header ryan: #{ryan_total}
                // .ui.inline.header eric: #{eric_total}
                .spacer 
                
            .ui.large.selection.animated.list.scrolling
                each work_list
                    a.item(href="/work/#{_id}")
                        .content
                            .ui.inline.header 
                                img.ui.tiny.inline.image(src="{{c.url staff_image_id width=400 height=300 crop='pad'}}")
                                |#{_author_username}: 
                            img.ui.tiny.inline.image(src="{{c.url task_image_id width=400 height=300 crop='pad'}}")
                            .ui.inline.header 
                                |#{task_title}
                            .ui.inline.header 
                                img.ui.tiny.inline.image(src="{{c.url location_image_id width=400 height=300 crop='pad'}}")
                                |@#{location_title}
                            | #{when}
                            small ({{long_date _timestamp}})
                            if image_id
                                img.ui.image(src="{{c.url task_image_id width=400 height=300 crop='pad'}}")
                            |#{task_points}pts
                        // .content
                        //     +favorite_icon_toggle
                
                
template(name='user_work')
    .ui.inline.header 
        +i name='cookbook'
        |user work
    .ui.basic.icon.button.send_work
        i.large.plus.icon
    .ui.padded.stackable.two.column.grid
        .column
            .ui.header 
                +i name='sent--v2'
                |authored 
            .ui.stackable.cards.scrolling
                each sent_work 
                    .ui.card
                        .content
                            a(href="/work/#{_id}") 
                                img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
    
                            .ui.header 
                                |#{amount} #{recipient_username}
                            // |created #{when}
                            |sent {{from_now sent_timestamp}}
                            small {{cal_time sent_timestamp}}
                            a.ui.icon.button(href='/work/#{_id}')
                                i.large.chevron.right.icon
                            
        .column
            .ui.header 
                +i name='gift--v1'
                |favorites
            .ui.stackable.cards.scrolling
                each favorited
                    .ui.card
                        .content
                            a(href="/work/#{_id}") 
                                img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            .ui.header 
                                |#{amount} #{_author_username}
                            |received {{from_now sent_timestamp}}
                            small {{cal_time sent_timestamp}}
                            a.ui.icon.button(href='/work/#{_id}')
                            i.ui.large.link.chevron.right.icon.edit_address
                
                
                
template(name='work_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .six.wide.column
                    .ui.inline.header
                        i.pencil.icon
                        | #{title}
                        small work
                    with work_task
                        .ui.segment
                            img.ui.small.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
                            .ui.header 
                                |#{title}
                            |#{description}
                    // +text_edit key='title' label='title' direct=true
                    +image_edit key='image_id' label='image' direct=true capture="camera"
                    div
                    // +textarea_edit key='notes' label='notes' direct=true
                    .ui.red.button.delete_work
                        i.remove.icon   
                        | cancel
                .ten.wide.column
                    .ui.header 
                        i.red.marker.icon
                        |location
                    each task_locations
                        .ui.big.circular.button.pick_location(class=location_picker_class)
                            .ui.heaader #{title}
                    if location_id
                        .ui.hidden.divider
                        a.ui.massive.icon.fluid.green.circular.button(href="/porters" title='submit')
                            i.checkmark.big.icon
                    if in_dev
                        +print_this
                    video#player(controls='' autoplay='')
                    button.ui.button#capture Capture
                    canvas#canvas(width='320' height='240')
                    script.
                        const player = document.getElementById('player');
                        const canvas = document.getElementById('canvas');
                        const context = canvas.getContext('2d');
                        const captureButton = document.getElementById('capture');
                        const constraints = {
                        video: true,
                        };
                        captureButton.addEventListener('click', () => {
                        // Draw the video frame to the canvas.
                        context.drawImage(player, 0, 0, canvas.width, canvas.height);
                        player.srcObject.getVideoTracks().forEach(track => track.stop());
                        
                        });
                        // Attach the video stream to the video element and autoplay.
                        navigator.mediaDevices.getUserMedia(constraints)
                        .then((stream) => {
                        player.srcObject = stream;
                        });
                        
                
template(name='work_view')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    a.ui.basic.icon.button(href="/work")
                        i.wrench.large.icon
                    .ui.inline.header
                        | #{title}
                        small work view
                    +image_view key='image_id' label='image' direct=true
                    div
                    a.ui.icon.button(href="/work/#{_id}/edit")
                        i.pencil.icon
                .eight.wide.column
                    a.zoomer(href="/user/#{_author_username}/")
                        img.ui.small.inline.image(src="{{c.url author.image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.large.inline.header #{_author_name} 
                    a.zoomer(href="/task/#{task_id}/")
                        img.ui.small.inline.image(src="{{c.url task_image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.inline.header 
                            |#{task_title}
                    a.zoomer(href="/location/#{location_id}/") 
                        img.ui.small.inline.image(src="{{c.url location_image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.inline.header @#{location_title}
                    .ui.header #{when}
                    div.scrolling
                        +html_view key='notes' label='directions' direct=true
                    // +array_view key='tags' label='tags' icon='tags' direct=true
                    +comments
                .four.wide.column
                    +voting_full
                    .ui.header #{task_points} pts earned
                    if in_dev 
                        +print_this
                        