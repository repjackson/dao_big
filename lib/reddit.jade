template(name='reddit')
    .ui.stackable.padded.grid
        .row
            .sixteen.wide.column
                each picked_tags
                    button.ui.active.compact.circular.large.button.unpick_tag(tabindex="0" class="#{loading_class} #{active_term_class}")
                        .ui.inline.small.header #{this}
                        //button.ui.active.large.circular.button.unpick_tag(tabindex='0' style=background_style class=emotion_color)
                //.ui.inline.small.header(class=emotion_color) {{fixed omega_doc.current_max_emotion_percent}}% #{omega_doc.current_most_emotion}
                // if not_searching 
                .ui.icon.search.input(class=search_class)
                    i.big.reddit.grey.icon
                    unless is_loading
                        if home_subs_ready
                            i.search.link.icon.refresh_agg
                    unless home_subs_ready
                        i.refresh.big.loading.link.icon.reconnect
                    if is_loading
                        i.refresh.big.loading.large.icon
                    //input#search(type='text' autofocus='' autocomplete="off" value=current_query)
                    input#search(type='text' autofocus='' autocomplete="off" placeholder='...')
                //.ui.header #{connection.status}
                //div
                if not_searching
                    .ui.center.aligned.basic.segment
                        +shortcut key='skiing' icon='skiing'
                        +shortcut key='food' icon='food'
                        +shortcut key='code' icon='code'
                        +shortcut key='money' icon='money'
                        +shortcut key='running' icon='running'
                        +shortcut key='space' icon='rocket'
                unless connected
                    //.ui.header disconnected
                    //.ui.hidden.divider
                    i.lightning.invert.big.circular.link.icon
                //div
                if connected
                    // if searching 
                    //     each terms 
                    //         +search_term
                    // else 
                    each unpicked_tags
                        +agg_tag
                .ui.stackable.padded.one.column.grid
                    each doc_results
                        +small_card
                        .ui.hidden.divider
            
                   
template(name='shortcut')                   
    i.big.icon.go.spaced.zoomer(class=icon title=key)
                    
template(name='agg_tag')
    button.ui.large.circular.button.result(tabindex="0" title=count)
        // if term.image
        //     //button.ui.compact.circular.button(tabindex="0" title=count)
        //     //img.ui.mini.inline.image(src=term.image)
        //     img.ui.mini.inline.image(src=term.image)
        //     .ui.inline.small.thin.header(class=tag_result_class) #{title}
        // else
        //     //button.ui.compact.circular.button(tabindex="0" title=count)
        | #{title}

        //small #{count}
                    
template(name='small_card')
    .column
        a.ui.header(href=url class=emotion_color_class target="_window") !{title}
        if is_youtube
            iframe.inline.invert(width="400" height="400" src="https://www.youtube.com/embed/#{youtube_id}?autoplay=0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
        else if is_image   
            unless is_youtube
                img.ui.centered.image.rounded.pointer.call_visual(src=url)
        else if has_thumbnail
            unless is_image
                unless is_video
                    unless is_youtube
                        unless watson.metadata.image
                            //img.ui.left.floated.middle.aligned.top.aligned.image.rounded(src=url class=omega_dark_mode_class)
                            //img.ui.left.floated.inline.image.rounded(src=thumbnail class=omega_dark_mode_class)
                            img.ui.left.floated.invert.image.rounded.pointer.call_visual(src=thumbnail)
        else if is_video
            .invert
                blockquote(class="reddit-card")
                    //a(href="https://www.reddit.com/r/PewdiepieSubmissions/comments/ga7oxs/i_made_some_3d_art_of_edgar_discovering_the/") 
                    a(href="https://www.reddit.com#{permalink}") 
                        |dao
                    |from 
                    a(href="http://www.reddit.com/r/news")
                        |r/
                    script(async src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")

        else if watson.metadata.image 
            unless is_video
                unless is_youtube
                    a(href="/doc/#{_id}/view")
                        img.ui.centered.rounded.image(src=watson.metadata.image)
                
        // .ui.icon.circular.button.vote_up(title=points)
        //     i.chevron.up.large.icon
        // .ui.inline.small.header #{points}
        // .ui.icon.circular.button.vote_down(title=points)
        //     i.chevron.down.large.icon  
        if key_value_is 'model' 'reddit'
            if reddit_id
                unless rd
                    //div
                    .ui.icon.circular.button.pull_post
                        i.reddit.large.icon
        if in_dev 
            i.code.link.icon.print_me
        //i.picture.icon(title='image tags')
        // each visual_tags
        //     .ui.compact.circular.button.toggle_tag #{this}
        // .ui.icon.small.input
        //     i.tag.icon
        //     input.add_tag(type='text')
        each user_tags
            .ui.compact.circular.button.toggle_tag #{this}
        
        a.ui.large.compact.circular.button(href="https://www.reddit.com#{permalink}" target="_blank" title='view reddit comments')
            i.chat.outline.large.icon
            |#{comment_count}
        a.ui.tertiary.button(href="https://www.reddit.com/r/#{subreddit}" target="_blank")
            i.reddit.icon
            |r/#{subreddit}
        if publish_when
            .ui.small.tertiary.circular.button
                //i.calendar.icon
                //|#{watson.metadata.publication_date}
                |#{publish_when}
        .ui.tertiary.circular.button.toggle_domain(title='add domain')
            //i.globe.icon
            |#{domain}
        if rd.selftext_html
            //unless tone
            //.content
            |!{parsed_selftext_html}
            //|!{rd.selftext_html}
        else
            if tone
                //.scrolling
                +tone
            //else
        if rd.selftext
            .content
                +markdown
                    !{rd.selftext}
            
        .content
            .spacer
            // .ui.icon.circular.button.vote_up(title=points)
            //     i.chevron.up.large.icon
            // .ui.inline.small.header #{points}
            // .ui.icon.circular.button.vote_down(title=points)
            //     i.chevron.down.large.icon  
            if key_value_is 'model' 'reddit'
                if reddit_id
                    unless rd
                        //div
                        .ui.icon.circular.large.button.pull_post
                            i.reddit.large.icon
            unless watson
                .ui.icon.circular.large.button.call_watson
                    i.dna.large.icon
            if dev 
                i.code.link.icon.print_me
            i.picture.icon(title='image tags')
            each visual_tags
                .ui.compact.circular.button.toggle_tag #{this}
            // .ui.icon.small.input
            //     i.tag.icon
            //     input.add_tag(type='text')
            // each user_tags
            //     .ui.compact.circular.button.toggle_tag #{this}
            
            a.ui.tertiary.compact.circular.button(href="https://www.reddit.com/#{permalink}" target="_blank" title='view reddit comments')
                i.chat.outline.large.icon
                |#{comment_count}
            a.ui.tertiary.button(href="https://www.reddit.com/r/#{subreddit}" target="_blank")
                i.reddit.icon
                |r/#{subreddit}
            if publish_when
                .ui.small.tertiary.circular.button
                    //i.calendar.icon
                    //|#{watson.metadata.publication_date}
                    |#{publish_when}
            .ui.tertiary.circular.button.toggle_domain(title='add domain')
                //i.globe.icon
                |#{domain}
            if rd.selftext_html
                //unless tone
                //.content
                |!{parsed_selftext_html}
                //|!{rd.selftext_html}
            // else
            //     if tone
            //         //.scrolling
            //         +tone
            //     //else
            if rd.selftext
                .content
                    +markdown
                        !{rd.selftext}
            



template(name='doc_page')
    with current_doc
        .ui.stackable.padded.grid 
            .middle.aligned.row
                .two.wide.center.aligned.column 
                    a.ui.circular.icon.large.button(href="/")
                        i.left.chevron.big.icon
                .twelve.wide.column 
                    .ui.center.aligned.large.header(class=emotion_color_class) !{title}
            .row
                .twelve.wide.column 
                    if is_youtube
                        iframe.invert(width="100%" height="500" src="https://www.youtube.com/embed/#{youtube_id}?autoplay=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
                
                    if url
                        a.ui.small.center.aligned.grey.header(href=url target='_window')
                            |#{url}
                        .spacer
                    if is_image
                        img.ui.image(src=url)
                    // else
                    //     if watson.metadata.image 
                    //         unless is_video
                    //             a(href=watson.metadata.image target='_window')
                    //                 img.ui.centered.image.rounded.pointer.call_visual(src=watson.metadata.image)
                    if is_video
                        .invert.full
                            blockquote(class="reddit-card")
                                //a(href="https://www.reddit.com/r/PewdiepieSubmissions/comments/ga7oxs/i_made_some_3d_art_of_edgar_discovering_the/") 
                                a(href="https://www.reddit.com#{permalink}") 
                                    |dao
                                |from 
                                a(href="http://www.reddit.com/r/news")
                                    |r/
                                script(async src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")
                    .scrolling
                        if rd.selftext_html
                            //unless tone
                            //.content
                            |!{parsed_selftext_html}
                            //|!{rd.selftext_html}
                        else
                            if tone
                                //.scrolling
                                +tone
                            //else
                        if rd.selftext
                            .content
                                +markdown
                                    !{rd.selftext}
                
                    //+session_edit_value_button key='view_tone' value=false label='plain'
                    
                .four.wide.column 
                    //if has_thumb
                    .meta
                        if has_thumbnail
                            unless is_image
                                unless is_video
                                    unless is_youtube
                                        //img.ui.left.floated.middle.aligned.top.aligned.image.rounded(src=url class=omega_dark_mode_class)
                                        //img.ui.left.floated.inline.image.rounded(src=thumbnail class=omega_dark_mode_class)
                                        img.ui.left.floated.invert.image.rounded.pointer.call_visual(src=thumbnail)
                        //if watson.metadata.image 
                        //    unless is_image
                        //        unless is_video
                        //            a(href=watson.metadata.image target='_window')
                        //                img.ui.centered.image.rounded.pointer.call_visual(src=watson.metadata.image)
                        //
                    
                        .ui.header #{publish_when}
                        //.ui.header #{rd.score} score
                        a.ui.circular.button(href=url target='_window')
                            i.external.icon
                            |view link
                        //span.ui.grey.text #{domain}
                        .ui.icon.circular.large.button.call_watson
                            i.dna.large.icon

                        if author
                            a.ui.button(href="https://www.reddit.com/user/#{author}" target='_window')
                                i.pencil.icon
                                |#{author}
                        if subreddit
                            a.ui.circular.button(href="http://www.reddit.com/r/#{subreddit}" target='_window' title="visit #{subreddit} subreddit")
                                i.reddit.icon
                                |#{subreddit}
                        //i.refresh.circular.link.icon.calc_post
                        a.ui.circular.button(href="https://www.reddit.com#{permalink}" target="_blank" title='view reddit comments')
                            i.chat.outline.large.icon
                            |#{comment_count}
                        if publish_when
                            .ui.circular.button
                                //i.calendar.icon
                                //|#{watson.metadata.publication_date}
                                |#{publish_when}
                        .ui.circular.button.toggle_domain(title='add domain')
                            //i.globe.icon
                            |#{domain}
                        
                        div
                    .ui.circular.icon.button.print_me
                        i.code.icon
                    if tags
                        //.ui.styled.accordion
                        //.active.title
                        .ui.inline.header #{tags.length} tags
                        //i.dropdown.icon
                        //.active.content
                        each tags
                            .ui.circular.compact.button.select_doc_tag
                                |#{this}
                    if watson 
                        +watson_view
                                
